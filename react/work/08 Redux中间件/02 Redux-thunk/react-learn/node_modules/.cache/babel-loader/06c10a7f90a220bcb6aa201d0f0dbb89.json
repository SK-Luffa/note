{"ast":null,"code":"export default function (actionCreators, dispatch) {\n  if (typeof actionCreators === \"function\") {\n    return getAutoDispatchActionCreator(actionCreators, dispatch);\n  } else if (typeof actionCreators === \"object\") {\n    const result = {}; //返回结果\n    for (const key in actionCreators) {\n      if (actionCreators.hasOwnProperty(key)) {\n        const actionCreator = actionCreators[key]; //取出对应的属性值\n        if (typeof actionCreator === \"function\") {\n          result[key] = getAutoDispatchActionCreator(actionCreator, dispatch);\n        }\n      }\n    }\n    return result;\n  } else {\n    throw new TypeError(\"actionCreators must be an object or function which means action creator\");\n  }\n}\n\n/**\n * 得到一个自动分发的action创建函数\n */\nfunction getAutoDispatchActionCreator(actionCreator, dispatch) {\n  return function () {\n    const action = actionCreator(...arguments);\n    dispatch(action);\n  };\n}","map":{"version":3,"names":["actionCreators","dispatch","getAutoDispatchActionCreator","result","key","hasOwnProperty","actionCreator","TypeError","action"],"sources":["/Users/dengzixu/Documents/notes/react/work/08 Redux中间件/02 Redux-thunk/react-learn/src/redux/bindActionCreators.js"],"sourcesContent":["export default function (actionCreators, dispatch) {\n    if (typeof actionCreators === \"function\") {\n        return getAutoDispatchActionCreator(actionCreators, dispatch);\n    }\n    else if (typeof actionCreators === \"object\") {\n        const result = {}; //返回结果\n        for (const key in actionCreators) {\n            if (actionCreators.hasOwnProperty(key)) {\n                const actionCreator = actionCreators[key]; //取出对应的属性值\n                if (typeof actionCreator === \"function\") {\n                    result[key] = getAutoDispatchActionCreator(actionCreator, dispatch);\n                }\n            }\n        }\n        return result;\n    }\n    else {\n        throw new TypeError(\"actionCreators must be an object or function which means action creator\")\n    }\n}\n\n/**\n * 得到一个自动分发的action创建函数\n */\nfunction getAutoDispatchActionCreator(actionCreator, dispatch) {\n    return function (...args) {\n        const action = actionCreator(...args)\n        dispatch(action);\n    }\n}"],"mappings":"AAAA,eAAe,UAAUA,cAAc,EAAEC,QAAQ,EAAE;EAC/C,IAAI,OAAOD,cAAc,KAAK,UAAU,EAAE;IACtC,OAAOE,4BAA4B,CAACF,cAAc,EAAEC,QAAQ,CAAC;EACjE,CAAC,MACI,IAAI,OAAOD,cAAc,KAAK,QAAQ,EAAE;IACzC,MAAMG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,KAAK,MAAMC,GAAG,IAAIJ,cAAc,EAAE;MAC9B,IAAIA,cAAc,CAACK,cAAc,CAACD,GAAG,CAAC,EAAE;QACpC,MAAME,aAAa,GAAGN,cAAc,CAACI,GAAG,CAAC,CAAC,CAAC;QAC3C,IAAI,OAAOE,aAAa,KAAK,UAAU,EAAE;UACrCH,MAAM,CAACC,GAAG,CAAC,GAAGF,4BAA4B,CAACI,aAAa,EAAEL,QAAQ,CAAC;QACvE;MACJ;IACJ;IACA,OAAOE,MAAM;EACjB,CAAC,MACI;IACD,MAAM,IAAII,SAAS,CAAC,yEAAyE,CAAC;EAClG;AACJ;;AAEA;AACA;AACA;AACA,SAASL,4BAA4B,CAACI,aAAa,EAAEL,QAAQ,EAAE;EAC3D,OAAO,YAAmB;IACtB,MAAMO,MAAM,GAAGF,aAAa,CAAC,YAAO,CAAC;IACrCL,QAAQ,CAACO,MAAM,CAAC;EACpB,CAAC;AACL"},"metadata":{},"sourceType":"module"}